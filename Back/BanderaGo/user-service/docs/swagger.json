{
	"swagger": "2.0",
	"info": {
		"contact": {}
	},
	"paths": {
		"/api/users": {
			"get": {
				"description": "Get a list of all users",
				"produces": ["application/json"],
				"tags": ["Usuarios"],
				"summary": "Get all users",
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/output.GetUsersOut"
							}
						}
					}
				}
			},
			"post": {
				"description": "Create a user with data of request",
				"consumes": ["application/json"],
				"produces": ["application/json"],
				"tags": ["Usuarios"],
				"summary": "Create a user",
				"parameters": [
					{
						"description": "Datos del usuario a crear",
						"name": "user",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/input.CreateUserIn"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Created",
						"schema": {
							"$ref": "#/definitions/output.CreateUserOut"
						}
					}
				}
			}
		},
		"/api/users/{id}": {
			"get": {
				"description": "Get details of a single user by ID",
				"produces": ["application/json"],
				"tags": ["Usuarios"],
				"summary": "Get a single user",
				"parameters": [
					{
						"type": "integer",
						"description": "User ID",
						"name": "id",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/output.GetUserOut"
						}
					}
				}
			},
			"put": {
				"description": "Update an existing user with new data",
				"consumes": ["application/json"],
				"produces": ["application/json"],
				"tags": ["Usuarios"],
				"summary": "Update a user",
				"parameters": [
					{
						"type": "integer",
						"description": "User ID",
						"name": "id",
						"in": "path",
						"required": true
					},
					{
						"description": "New user data",
						"name": "user",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/input.UpdateUserIn"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/output.UpdateUserOut"
						}
					}
				}
			},
			"delete": {
				"description": "Delete a user by ID",
				"produces": ["application/json"],
				"tags": ["Usuarios"],
				"summary": "Delete a user",
				"parameters": [
					{
						"type": "integer",
						"description": "User ID",
						"name": "id",
						"in": "path",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/output.DeleteUserOut"
						}
					}
				}
			}
		}
	},
	"definitions": {
		"input.CreateUserIn": {
			"type": "object",
			"required": ["last_name", "name"],
			"properties": {
				"last_name": {
					"type": "string"
				},
				"name": {
					"type": "string"
				}
			}
		},
		"input.UpdateUserIn": {
			"type": "object",
			"required": ["last_name", "name"],
			"properties": {
				"last_name": {
					"type": "string"
				},
				"name": {
					"type": "string"
				}
			}
		},
		"output.CreateUserOut": {
			"type": "object",
			"properties": {
				"created_at": {
					"type": "string"
				},
				"id": {
					"type": "integer"
				},
				"last_name": {
					"type": "string"
				},
				"name": {
					"type": "string"
				}
			}
		},
		"output.DeleteUserOut": {
			"type": "object",
			"properties": {
				"success": {
					"type": "boolean"
				}
			}
		},
		"output.GetUserOut": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer"
				},
				"last_name": {
					"type": "string"
				},
				"name": {
					"type": "string"
				}
			}
		},
		"output.GetUsersOut": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer"
				},
				"last_name": {
					"type": "string"
				},
				"name": {
					"type": "string"
				}
			}
		},
		"output.UpdateUserOut": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer"
				},
				"last_name": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"updated_at": {
					"type": "string"
				}
			}
		}
	}
}
